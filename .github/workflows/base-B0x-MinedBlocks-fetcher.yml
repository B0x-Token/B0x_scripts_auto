name: Ethereum Block Fetcher

on:
  schedule:
    # Runs every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch: # Allows manual triggering
  push:
    branches: [ main ]  # Also runs on pushes to main for testing

jobs:
  fetch-blocks:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install web3
    
    - name: Create data directory
      run: |
        mkdir -p data
    
    - name: Download previous data
      continue-on-error: true
      run: |
        echo "Attempting to download previous data file..."
        if curl -f -L -o uu_mined_blocks_testnet.json "https://github.com/${{ github.repository }}/releases/latest/download/uu_mined_blocks_testnet.json"; then
          echo "Downloaded previous data file successfully"
          ls -la uu_mined_blocks_testnet.json
        else
          echo "No previous data file found or download failed, starting fresh"
          echo "This is normal for the first run"
        fi
    
    - name: Set RPC URL
      run: |
        # Set a default RPC URL if the secret is not available
        if [ -z "${{ secrets.RPC_URL }}" ]; then
          echo "RPC_URL secret not set, will use default in script"
          echo "RPC_URL_TO_USE=" >> $GITHUB_ENV
        else
          echo "Using RPC_URL from secrets"
          echo "RPC_URL_TO_USE=${{ secrets.RPC_URL }}" >> $GITHUB_ENV
        fi
    
    - name: Run Ethereum Block Fetcher
      env:
        RPC_URL: ${{ env.RPC_URL_TO_USE }}
      run: |
        echo "Starting Ethereum Block Fetcher..."
        python ethereum_block_fetcher_github.py
      timeout-minutes: 25
    
    - name: Upload results as artifacts
      uses: actions/upload-artifact@v4
      if: always()  # Upload even if there were errors
      with:
        name: mined-blocks-data-${{ github.run_number }}
        path: |
          uu_mined_blocks_testnet.json
        retention-days: 30
    
    - name: Create Release with Data
      if: success() && hashFiles('uu_mined_blocks_testnet.json') != ''
      uses: softprops/action-gh-release@v1
      with:
        tag_name: data-${{ github.run_number }}
        name: "Block Data Update ${{ github.run_number }}"
        files: |
          uu_mined_blocks_testnet.json
        body: |
          Automated block data update
          - Run: ${{ github.run_number }}
          - Timestamp: ${{ steps.date.outputs.date }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
