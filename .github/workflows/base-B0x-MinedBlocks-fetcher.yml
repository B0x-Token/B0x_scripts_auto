name: Ethereum Block Fetcher

on:
  schedule:
    # Runs every 30 minutes
    - cron: '0,30 * * * *'
  workflow_dispatch: # Allows manual triggering
  push:
    branches: [ main ]  # Also runs on pushes to main for testing

jobs:
  fetch-blocks:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install web3
    
    - name: Create mainnetB0x directory
      run: |
        mkdir -p mainnetB0x
    
    - name: Check for existing data file
      run: |
        if [ -f "mainnetB0x/uu_mined_blocks_testnet.json" ]; then
          echo "Found existing data file, copying to working directory"
          cp mainnetB0x/uu_mined_blocks_testnet.json ./
        else
          echo "No existing data file found in mainnetB0x directory"
        fi
    
    - name: Run Ethereum Block Fetcher
      env:
        RPC_URL: ${{ secrets.RPC_URL }}
      run: |
        echo "Starting Ethereum Block Fetcher..."
        python ethereum_block_fetcher_github.py
      timeout-minutes: 25
    
    - name: Move data file to mainnetB0x directory
      id: move_file
      run: |
        if [ -f "uu_mined_blocks_testnet.json" ]; then
          cp uu_mined_blocks_testnet.json mainnetB0x/
          echo "file_exists=true" >> $GITHUB_OUTPUT
          echo "File moved to mainnetB0x/ directory"
          echo "File size: $(ls -lh mainnetB0x/uu_mined_blocks_testnet.json)"
          echo "Data preview:"
          tail -10 mainnetB0x/uu_mined_blocks_testnet.json
        else
          echo "file_exists=false" >> $GITHUB_OUTPUT
          echo "Data file was not created"
        fi
    
    - name: Create additional files in mainnetB0x
      if: steps.move_file.outputs.file_exists == 'true'
      run: |
        # Create a latest.json symlink/copy
        cp mainnetB0x/uu_mined_blocks_testnet.json mainnetB0x/latest.json
        
        # Create README for the mainnetB0x directory
        cat > mainnetB0x/README.md << 'EOF'
        # B0x Mining Data - Base Mainnet
        
        This directory contains automatically updated mining data for the B0x token on Base mainnet.
        
        ## Files
        
        - uu_mined_blocks_testnet.json - Main data file with all mining transactions
        - latest.json - Copy of the main file for easy access
        - index.html - Web interface for viewing the data
        
        ## Direct Access Links
        
        - JSON Data: https://raw.githubusercontent.com/${{ github.repository }}/main/mainnetB0x/uu_mined_blocks_testnet.json
        - Latest Copy: https://raw.githubusercontent.com/${{ github.repository }}/main/mainnetB0x/latest.json
        
        ## Data Structure
        
        The JSON file contains an object with the following structure:
        - mined_blocks: Array of arrays containing [block_number, tx_hash, miner_address, amount, epoch_count]
        - total_blocks: Total number of blocks processed
        - last_updated: Unix timestamp of last update
        - latest_block_number: Latest blockchain block processed
        - contract_address: The smart contract address
        - mint_topic: The event topic hash
        - previous_challenge: Last challenge hash
        
        Updated automatically every 30 minutes via GitHub Actions.
        EOF
        
        # Create a simple HTML interface
        cat > mainnetB0x/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>B0x Mining Data - Base Mainnet</title>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <style>
                body { 
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
                    margin: 0; 
                    padding: 20px; 
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    min-height: 100vh;
                }
                .container { 
                    max-width: 1000px; 
                    margin: 0 auto; 
                    background: white; 
                    border-radius: 10px; 
                    box-shadow: 0 10px 25px rgba(0,0,0,0.1);
                    overflow: hidden;
                }
                .header {
                    background: linear-gradient(45deg, #1e3c72, #2a5298);
                    color: white;
                    padding: 30px;
                    text-align: center;
                }
                .stats { 
                    display: grid; 
                    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); 
                    gap: 20px; 
                    padding: 20px; 
                    background: #f8f9fa;
                }
                .stat-card {
                    background: white;
                    padding: 20px;
                    border-radius: 8px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    text-align: center;
                }
                .stat-value {
                    font-size: 24px;
                    font-weight: bold;
                    color: #2a5298;
                }
                .stat-label {
                    color: #666;
                    margin-top: 5px;
                }
                .links { 
                    padding: 20px; 
                    background: #e3f2fd; 
                }
                .link-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                    gap: 15px;
                }
                .link-card {
                    background: white;
                    padding: 15px;
                    border-radius: 6px;
                    border-left: 4px solid #2a5298;
                }
                .link-card a {
                    color: #1565c0;
                    text-decoration: none;
                    font-weight: 500;
                }
                .link-card a:hover {
                    text-decoration: underline;
                }
                .recent-blocks {
                    padding: 20px;
                }
                .block-item {
                    background: #f5f5f5;
                    padding: 10px;
                    margin: 5px 0;
                    border-radius: 4px;
                    font-family: monospace;
                    font-size: 12px;
                }
                .loading {
                    text-align: center;
                    padding: 20px;
                    color: #666;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>B0x Mining Data</h1>
                    <p>Base Mainnet â€¢ Real-time Mining Statistics</p>
                </div>
                
                <div class="stats" id="stats-grid">
                    <div class="loading">Loading statistics...</div>
                </div>
                
                <div class="links">
                    <h3>Direct Data Access</h3>
                    <div class="link-grid">
                        <div class="link-card">
                            <strong>Main Data File</strong><br>
                            <a href="uu_mined_blocks_testnet.json" target="_blank">uu_mined_blocks_testnet.json</a>
                        </div>
                        <div class="link-card">
                            <strong>Latest Copy</strong><br>
                            <a href="latest.json" target="_blank">latest.json</a>
                        </div>
                        <div class="link-card">
                            <strong>GitHub Raw</strong><br>
                            <a href="https://raw.githubusercontent.com/${{ github.repository }}/main/mainnetB0x/uu_mined_blocks_testnet.json" target="_blank">Raw JSON</a>
                        </div>
                        <div class="link-card">
                            <strong>Contract</strong><br>
                            <a href="#" id="contract-link" target="_blank">View on BaseScan</a>
                        </div>
                    </div>
                </div>
                
                <div class="recent-blocks">
                    <h3>Recent Mining Activity</h3>
                    <div id="recent-blocks-content" class="loading">Loading recent blocks...</div>
                </div>
            </div>
            
            <script>
                async function loadData() {
                    try {
                        const response = await fetch('latest.json');
                        const data = await response.json();
                        
                        // Update stats
                        const statsGrid = document.getElementById('stats-grid');
                        statsGrid.innerHTML = `
                            <div class="stat-card">
                                <div class="stat-value">${data.total_blocks.toLocaleString()}</div>
                                <div class="stat-label">Total Blocks Mined</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-value">${data.latest_block_number.toLocaleString()}</div>
                                <div class="stat-label">Latest Block Processed</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-value">${new Date(data.last_updated * 1000).toLocaleDateString()}</div>
                                <div class="stat-label">Last Updated</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-value">${new Date(data.last_updated * 1000).toLocaleTimeString()}</div>
                                <div class="stat-label">Update Time</div>
                            </div>
                        `;
                        
                        // Update contract link
                        document.getElementById('contract-link').href = `https://basescan.org/address/${data.contract_address}`;
                        
                        // Show recent blocks
                        const recentBlocks = data.mined_blocks.slice(0, 10);
                        const recentBlocksContent = document.getElementById('recent-blocks-content');
                        recentBlocksContent.innerHTML = recentBlocks.map(block => `
                            <div class="block-item">
                                Block: ${block[0]} | Miner: ${block[2]} | Amount: ${block[3]} | Epoch: ${block[4]}
                            </div>
                        `).join('');
                        
                    } catch (error) {
                        console.error('Error loading data:', error);
                        document.getElementById('stats-grid').innerHTML = '<div class="loading">Error loading data</div>';
                        document.getElementById('recent-blocks-content').innerHTML = '<div class="loading">Error loading recent blocks</div>';
                    }
                }
                
                loadData();
                
                // Auto-refresh every 5 minutes
                setInterval(loadData, 5 * 60 * 1000);
            </script>
        </body>
        </html>
        EOF
    
    - name: Configure Git
      if: steps.move_file.outputs.file_exists == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
    
    - name: Pull latest changes before committing
      if: steps.move_file.outputs.file_exists == 'true'
      run: |
        git pull origin main || true
    
    - name: Commit and push data files with retry logic
      if: steps.move_file.outputs.file_exists == 'true'
      run: |
        # Only add Ethereum-specific files
        git add mainnetB0x/uu_mined_blocks_testnet.json mainnetB0x/latest.json mainnetB0x/README.md mainnetB0x/index.html
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        # Retry logic for concurrent workflows
        for attempt in {1..5}; do
          echo "Commit attempt $attempt"
          
          # Get current timestamp and block info for commit message
          TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S UTC')
          TOTAL_BLOCKS=$(python -c "import json; data=json.load(open('mainnetB0x/uu_mined_blocks_testnet.json')); print(data.get('total_blocks', 0))")
          LATEST_BLOCK=$(python -c "import json; data=json.load(open('mainnetB0x/uu_mined_blocks_testnet.json')); print(data.get('latest_block_number', 'unknown'))")
          
          if git commit -m "Update B0x mining data: ${TOTAL_BLOCKS} blocks processed (latest: ${LATEST_BLOCK}) - ${TIMESTAMP}"; then
            # Try to push
            if git push origin main; then
              echo "Successfully pushed on attempt $attempt"
              echo "Total blocks processed: ${TOTAL_BLOCKS}"
              echo "Access your data at:"
              echo "   JSON: https://raw.githubusercontent.com/${{ github.repository }}/main/mainnetB0x/uu_mined_blocks_testnet.json"
              echo "   Web:  https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/mainnetB0x/"
              break
            else
              echo "Push failed on attempt $attempt - another workflow may have pushed first"
              # Pull the latest changes and try again
              git reset --soft HEAD~1  # Undo the commit but keep changes staged
              git pull origin main || git pull origin main --no-rebase
              
              # Add a small random delay to reduce collision probability
              sleep $((RANDOM % 10 + 5))
            fi
          else
            echo "Commit failed on attempt $attempt"
            break
          fi
          
          if [ $attempt -eq 5 ]; then
            echo "Failed to push after 5 attempts - this may need manual intervention"
            exit 1
          fi
        done
    
    - name: Upload artifacts (backup)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mainnetB0x-data-${{ github.run_number }}
        path: mainnetB0x/
        retention-days: 7
