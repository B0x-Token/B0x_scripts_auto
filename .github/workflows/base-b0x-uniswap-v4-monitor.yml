name: Uniswap V4 Monitor

on:
  schedule:
    # Runs every 30 minutes (offset by 15 minutes from the other workflow)
    - cron: '15,45 * * * *'
  workflow_dispatch: # Allows manual triggering
  push:
    branches: [ main ]  # Also runs on pushes to main for testing

jobs:
  monitor-positions:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-uniswap-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-uniswap-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install web3 requests eth-abi
    
    - name: Create mainnetB0x directory
      run: |
        mkdir -p mainnetB0x
    
    - name: Check for existing Uniswap data file
      run: |
        if [ -f "mainnetB0x/uniswap_v4_data_testnet.json" ]; then
          echo "Found existing Uniswap data file, copying to working directory"
          cp mainnetB0x/uniswap_v4_data_testnet.json ./
        else
          echo "No existing Uniswap data file found in mainnetB0x directory"
        fi
    
    - name: Run 4Uniswap V4 Monitor
      env:
        RPC_URL: ${{ secrets.RPC_URL }}
      run: |
        echo "Starting Uniswap V4 Monitor..."
        python uniswap_v4_monitor_github.py
      timeout-minutes: 25
    
    - name: Move Uniswap data file to mainnetB0x directory
      id: move_uniswap_file
      run: |
        if [ -f "uniswap_v4_data_testnet.json" ]; then
          cp uniswap_v4_data_testnet.json mainnetB0x/
          echo "file_exists=true" >> $GITHUB_OUTPUT
          echo "Uniswap data file moved to mainnetB0x/ directory"
          echo "File size: $(ls -lh mainnetB0x/uniswap_v4_data_testnet.json)"
          echo "Data preview:"
          tail -10 mainnetB0x/uniswap_v4_data_testnet.json
        else
          echo "file_exists=false" >> $GITHUB_OUTPUT
          echo "Uniswap data file was not created"
        fi
    
    - name: Update HTML interface for Uniswap data
      if: steps.move_uniswap_file.outputs.file_exists == 'true'
      run: |
        # Update the HTML interface to include Uniswap data
        if [ -f "mainnetB0x/index.html" ]; then
          # Check if Uniswap link already exists
          if ! grep -q "uniswap_v4_data_testnet.json" mainnetB0x/index.html; then
            # Create a temporary file with the new content
            python3 << 'PYTHON_EOF'
import re

# Read the HTML file
with open('mainnetB0x/index.html', 'r') as f:
    content = f.read()

# Define the new link card HTML (single line to avoid YAML issues)
new_card = '<div class="link-card"><strong>Uniswap V4 Data</strong><br><a href="uniswap_v4_data_testnet.json" target="_blank">uniswap_v4_data_testnet.json</a></div>'

# Find the pattern to insert after
pattern = r'(<div class="link-card">.*?</div>)(\s*</div>\s*</div>)'
match = re.search(pattern, content, re.DOTALL)

if match:
    # Insert the new card before the closing divs
    new_content = content.replace(match.group(0), match.group(1) + '\n                        ' + new_card + '\n' + match.group(2))
    
    # Write back to file
    with open('mainnetB0x/index.html', 'w') as f:
        f.write(new_content)
    
    print("Successfully added Uniswap data link to HTML interface")
else:
    print("Could not find insertion point in HTML file")
PYTHON_EOF
          fi
        fi
        
    - name: Configure Git
      if: steps.move_uniswap_file.outputs.file_exists == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
    
    - name: Commit and push Uniswap data files
      if: steps.move_uniswap_file.outputs.file_exists == 'true'
      run: |
        git add mainnetB0x/
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Get current timestamp and position info for commit message
          TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S UTC')
          VALID_POSITIONS=$(python -c "import json; data=json.load(open('mainnetB0x/uniswap_v4_data_testnet.json')); print(data['metadata'].get('total_valid_positions', 0))" 2>/dev/null || echo "0")
          CURRENT_BLOCK=$(python -c "import json; data=json.load(open('mainnetB0x/uniswap_v4_data_testnet.json')); print(data['metadata'].get('current_block', 'unknown'))" 2>/dev/null || echo "unknown")
          
          git commit -m "Update Uniswap V4 data: ${VALID_POSITIONS} valid positions (block: ${CURRENT_BLOCK}) - ${TIMESTAMP}"
          git push
          
          echo "✅ Uniswap data files committed and pushed successfully!"
          echo "📊 Valid positions: ${VALID_POSITIONS}"
          echo "🔗 Access your Uniswap data at:"
          echo "   📄 JSON: https://raw.githubusercontent.com/${{ github.repository }}/main/mainnetB0x/uniswap_v4_data_testnet.json"
          echo "   🌐 Web:  https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/mainnetB0x/"
        fi
    
    - name: Upload Uniswap artifacts (backup)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: uniswap-v4-data-${{ github.run_number }}
        path: mainnetB0x/uniswap_v4_data_testnet.json
        retention-days: 7
